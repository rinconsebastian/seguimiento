@model seguimiento.Models.Nota

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Create</title>
</head>
<body>
    @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "NotaCreateForm", @class = "form-notas-width" }))
    {
        @Html.AntiForgeryToken()

        
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group hide">
                @Html.LabelFor(model => model.IdCategoria, "IdCategoria", htmlAttributes: new { @class = "col-md-3 col-form-label" })
                <div class="col-md-9">
                    @Html.DropDownList("IdCategoria", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.IdCategoria, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group hide">
                @Html.LabelFor(model => model.UserId, "UserId", htmlAttributes: new { @class = "col-md-3 col-form-label" })
                <div class="col-md-9">
                    @Html.DropDownList("UserId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group hide">
                @Html.LabelFor(model => model.FechaCreacion, htmlAttributes: new { @class = "col-md-3 col-form-label" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.FechaCreacion, new { htmlAttributes = new { @class = "form-control", @readonly = "true", @Value = DateTime.Now.ToLocalTime().ToString() } })
                    @Html.ValidationMessageFor(model => model.FechaCreacion, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group hide">
                @Html.LabelFor(model => model.FechaActualizacion, htmlAttributes: new { @class = "col-md-3 col-form-label" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.FechaActualizacion, new { htmlAttributes = new { @class = "form-control", @readonly = "true", @Value = DateTime.Now.ToLocalTime().ToString() } })
                    @Html.ValidationMessageFor(model => model.FechaActualizacion, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.Titulo, htmlAttributes: new { @class = "col-md-3 col-form-label" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.Titulo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Titulo, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row">
                @Html.LabelFor(model => model.Estado, htmlAttributes: new { @class = "col-md-3 col-form-label" })
                <div class="col-md-9">
                    @Html.DropDownList("Estado", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Estado, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.Texto, htmlAttributes: new { @class = "col-md-3 col-form-label" })
                <div class="col-md-9">
                    @Html.TextAreaFor(model => model.Texto, htmlAttributes: new { @class = "form-control", rows = "6" })
                    @Html.ValidationMessageFor(model => model.Texto, "", new { @class = "text-danger" })
                </div>
            </div>





            <div class="form-group row">
                @Html.LabelFor(model => model.Adjunto, htmlAttributes: new { @class = "col-md-3 col-form-label padding-top-0" })
                <div class="col-md-9">
                    <p class="align-right margin-bottom-0">
                        @Html.EditorFor(model => model.Adjunto, new { htmlAttributes = new { @class = "form-control", @readonly = "true", style = "display:none" } })
                        <a href="" target="_blank" id="urlAdjunto"></a>
                        @Html.ValidationMessageFor(model => model.Adjunto, "", new { @class = "text-danger  uploading" })
                    </p>

                </div>
            </div>


        
    }
    @using (Html.BeginForm("UploadFile", "Upload", FormMethod.Post, new { enctype = "multipart/form-data", id = "uploadFileForm", @class = "form-notas-width" }))
    {

        <div></div>
        <div class="row">
            <div class="col-md-3"></div>
            <div class="col-md-9">
                @Html.TextBox("file", "", new { type = "file", id = "fileuploadtext" })
            </div>
            @ViewBag.Message

        </div>


    }

    <div>

    </div>
    <div class="modal-footer">

        <button type="button" class="btn btn-outline-dark NotasVolver" aria-label="Left Align" data-categoria="@ViewBag.categ">
            <i class="fas fa-arrow-left"></i> Volver
        </button>

        <button type="button" class="btn btn-outline-primary NotaCreateButton" aria-label="Left Align" data-categoria="@ViewBag.categ">
            <i class="fas fa-save"></i>Guardar
        </button>
    </div>
</body>
</html>
